% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mici.impute.R
\name{mici.impute}
\alias{mici.impute}
\title{Function to generate multiple imputations}
\usage{
mici.impute(ftime = NULL, ftype = NULL, data = NULL, M = 200, scheme = "KMI")
}
\arguments{
\item{ftime}{Either the name of the variable in the data that contains the event
times, or a length n vector of event times.}

\item{ftype}{Either the name of the variable in the data that contains the event
types, or a length n vector of event types. Note that event = 0 corresponds to
censoring, event = 1 corresponds to the event of interest, and any event indicator
greater than 1 corresponds to competing event(s).}

\item{data}{Optional: if the ftime and ftype inputs are variable names (rather than 
numeric vectors), this is the dataframe in which those variables are stored.}

\item{M}{The number of imputations desired; the default is 200.}

\item{scheme}{The imputation approach to be used. Options are "RSI" for risk 
set imputation and "KMI" for Kaplan-Meier imputation. KMI is the default.}
}
\value{
The function returns a length M list, where each object of the list 
is a dataframe with columns ftime, ftype containing the imputed event times and
event types. If data was inputted to the original function, all original columns
of the dataset are kept in each of the M dataframes of the list. If only vectors
were inputted to the original function, the columns time and type in each of the 
M dataframes store the original inputs (without imputation).
}
\description{
This function generates multiple imputations according to the nonparametric
multiple imputation scheme described in Chase et al. (2024+). In particular,
for censored individuals it generates an imputed event time and type by sampling
from the Kaplan-Meier distribution of overall event times and then randomly
sampling an event type among those observed at the imputed event time. The
function outputs a length M list of imputed datasets free of censoring.
}
\examples{
ftime <- sample(c(1:10), size = 100, replace = TRUE)
ftype <- sample(c(0:2), size = 100, replace = TRUE)

myimps <- mici.impute(ftime, ftype, M = 10, scheme = "KMI")
mycuminc <- mici.cuminc(myimps, int.type = "Wilson")

mydata <- data.frame("time" = sample(c(1:10), size = 100, replace = TRUE),
"type" = sample(c(0:2), size = 100, replace = TRUE))

myimps <- mici.impute(time, type, data = mydata, scheme = "RSI")
mycuminc <- mici.cuminc(myimps, int.type = "Wald")

}
